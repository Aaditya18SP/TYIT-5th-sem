CREATE COLLECTION AND INSERT ONE DOCUMENT

 Users Collection
db.createCollection(users)
db.users.createIndex({ user_type 1 })
db.users.createIndex({ user_account_status 1 })
db.users.insertOne({
  control_faculty_id 12345678900,
  user_email user@example.com,
  user_phone 123-456-7890,
  user_fullname John Doe,
  user_password hashed_password,
  user_type s,
  user_account_status a
})

 Admin Users Collection
db.createCollection(admin_users)
db.admin_users.insertOne({
  admin_id 20000000001,
  admin_email admin@example.com,
  admin_phone 987-654-3210,
  admin_fullname Admin Name,
  admin_password hashed_password
})

 User Device Details Collection
db.createCollection(user_device_details)
db.user_device_details.createIndex({ user_id 1 })
db.user_device_details.createIndex({ admin_id 1 })
db.user_device_details.insertOne({
  device_id 98765432100,
  device_token device_token_here,
  user_id 12345678900,
  admin_id null
})

 FAQ Collection
db.createCollection(faq)
db.faq.insertOne({
  faq_id 40000000001,
  faq_question What is this,
  faq_answer This is the answer.
})

 Category Collection
db.createCollection(category) db.category.insertOne({ cat_id 50000000001, cat_name Stationary })

 Reported Item Collection
db.createCollection(reported_item)
db.reported_item.createIndex({ category_id 1 })
db.reported_item.createIndex({ admin_id 1 })
db.reported_item.createIndex({ user_id 1 })
db.reported_item.insertOne({
  r_id 60000000001,
  r_name Reported Item Name,
  r_location Location,
  r_time_of_loss 123456,
  r_date_of_loss ISODate(2023-08-31),
  r_progress l,
  r_reported_as l,
  r_description Description,
  category_id 50000000002,
  admin_id null,
  admin_date_reported ISODate(2023-08-31),
  user_id 12345678902,
  user_date_reported ISODate(2023-08-31)
})

 Reported Image Collection
db.createCollection(reported_image)
db.reported_image.insertOne({
  r_id  60000000001,
  r_image image_url_here
})

 Messages Collection
db.createCollection(messages)
db.messages.createIndex({ to_user_id 1 })
db.messages.createIndex({ from_user_id 1 })
db.messages.createIndex({ to_admin_id 1 })
db.messages.createIndex({ from_admin_id 1 })
db.messages.insertOne({
  m_id 80000000001,
  m_content Message content,
  m_date ISODate(2023-08-31),
  m_time 123456,
  to_user_id 1,
  from_user_id 1,
  to_admin_id 1,
  from_admin_id 1
})

 Create collection and indexes
 db.createCollection(security_qa); db.security_qa.createIndex({ sqa_r_id 1 }); 

 Insert a security question-answer pair 
db.security_qa.insertOne({ sqa_question What is your mother's maiden name, sqa_answer Smith, sqa_r_id 60000000001 });

 Answers Collection
db.createCollection(answers)
db.answers.createIndex({ ans_question 1 })
db.answers.createIndex({ ans_r_id 1 })
db.answers.createIndex({ ans_user_id 1 })
db.answers.insertOne({
  ans_veri_status v,
  ans_question Security Question,
  ans_r_id 1,
  ans_user_id 1
})

INSERT DUMMY DATA

db.users.insertMany([
  {
    control_faculty_id 12345678901,
    user_email user2@example.com,
    user_phone 555-123-4567,
    user_fullname Jane Smith,
    user_password hashed_password,
    user_type f,
    user_account_status a
  },
  {
    control_faculty_id 12345678902,
    user_email user3@example.com,
    user_phone 555-987-6543,
    user_fullname Alice Johnson,
    user_password hashed_password,
    user_type s,
    user_account_status s
  },
  {
    control_faculty_id 12345678903,
    user_email user4@example.com,
    user_phone 555-555-5555,
    user_fullname Bob Anderson,
    user_password hashed_password,
    user_type f,
    user_account_status a
  },
  {
    control_faculty_id 12345678904,
    user_email user5@example.com,
    user_phone 555-111-2222,
    user_fullname Eve Lee,
    user_password hashed_password,
    user_type s,
    user_account_status a
  },
  {
    control_faculty_id 12345678905,
    user_email user6@example.com,
    user_phone 555-222-3333,
    user_fullname Alex Brown,
    user_password hashed_password,
    user_type f,
    user_account_status a
  },
  {
    control_faculty_id 12345678906,
    user_email user7@example.com,
    user_phone 555-333-4444,
    user_fullname Grace Taylor,
    user_password hashed_password,
    user_type s,
    user_account_status s
  },
  {
    control_faculty_id 12345678907,
    user_email user8@example.com,
    user_phone 555-444-5555,
    user_fullname Michael Johnson,
    user_password hashed_password,
    user_type f,
    user_account_status a
  },
  {
    control_faculty_id 12345678908,
    user_email user9@example.com,
    user_phone 555-555-6666,
    user_fullname Olivia Davis,
    user_password hashed_password,
    user_type s,
    user_account_status a
  },
  {
    control_faculty_id 12345678909,
    user_email user10@example.com,
    user_phone 555-666-7777,
    user_fullname William Smith,
    user_password hashed_password,
    user_type f,
    user_account_status a
  },
  {
    control_faculty_id 12345678910,
    user_email user11@example.com,
    user_phone 555-777-8888,
    user_fullname Sophia Johnson,
    user_password hashed_password,
    user_type s,
    user_account_status a
  }
]);


ADMIN
db.admin_users.insertOne({
  admin_id 20000000001,
  admin_email admin@example.com,
  admin_phone 987-654-3210,
  admin_fullname Admin Name,
  admin_password hashed_password
}


USER DEVICE DETAILS

 Inserting devices for users with user_id (admin_id is null)
db.user_device_details.insertMany([
  {
    device_id 98765432101,
    device_token device_token_user2,
    user_id 12345678901,
    admin_id null
  },
  {
    device_id 98765432102,
    device_token device_token_user3,
    user_id 12345678902,
    admin_id null
  },
  {
    device_id 98765432103,
    device_token device_token_user4,
    user_id 12345678903,
    admin_id null
  },
  {
    device_id 98765432104,
    device_token device_token_user5,
    user_id 12345678904,
    admin_id null
  },
   Insert more documents for other users...
]);

 Inserting a device for admin (admin_id is present, user_id is null)
db.user_device_details.insertOne({
  device_id 98765432111,
  device_token device_token_admin,
  user_id null,
  admin_id 12345678907
});


FAQ
db.faq.insertMany([
  {
    faq_id 40000000002,
    faq_question How does this work,
    faq_answer This works by...
  },
  {
    faq_id 40000000003,
    faq_question Is there a user guide,
    faq_answer Yes, there is a comprehensive user guide available.
  },
  {
    faq_id 40000000004,
    faq_question What are the system requirements,
    faq_answer The system requires...
  },
  {
    faq_id 40000000005,
    faq_question Can I customize the settings,
    faq_answer Yes, you can customize various settings as per your preference.
  },
  {
    faq_id 40000000006,
    faq_question How do I reset my password,
    faq_answer To reset your password, go to the 'Forgot Password' page...
  },
  {
    faq_id 40000000007,
    faq_question What is the pricing,
    faq_answer For pricing details, visit our pricing page or contact our sales team.
  },
  {
    faq_id 40000000008,
    faq_question Is customer support available 247,
    faq_answer Yes, our customer support team is available around the clock.
  },
  {
    faq_id 40000000009,
    faq_question How can I upgrade my plan,
    faq_answer To upgrade your plan, log in to your account and navigate to the upgrade section.
  },
  {
    faq_id 40000000010,
    faq_question Do you offer a free trial,
    faq_answer Yes, we offer a free trial period for new users.
  },
  {
    faq_id 40000000011,
    faq_question How do I contact customer support,
    faq_answer You can contact our customer support via phone, email, or live chat.
  }
]);


CATEGORY
db.category.insertMany([
  {
    cat_id 50000000002,
    cat_name Electronics
  },
  {
    cat_id 50000000003,
    cat_name Clothing
  },
  {
    cat_id 50000000004,
    cat_name Accessories
  },
  {
    cat_id 50000000005,
    cat_name Books
  },
  {
    cat_id 50000000006,
    cat_name Jewelry
  },
  {
    cat_id 50000000007,
    cat_name Sports Equipment
  },
  {
    cat_id 50000000008,
    cat_name Furniture
  },
  {
    cat_id 50000000009,
    cat_name Art and Crafts
  },
  {
    cat_id 50000000010,
    cat_name Toys
  },
  {
    cat_id 50000000011,
    cat_name Personal Documents
  }
]);

REPORTED ITEM
db.reported_item.insertMany([
  {
    r_id 60000000002,
    r_name Lost Wallet,
    r_location Coffee Shop,
    r_time_of_loss 153000,
    r_date_of_loss 2023-08-15T000000Z,
    r_progress l,
    r_reported_as l,
    r_description Black leather wallet,
    category_id 50000000002,
    admin_id null,
    user_id 12345678902,
    user_date_reported 2023-08-15T000000Z
  },
  {
    r_id 60000000003,
    r_name Stolen Phone,
    r_location Bus Stop,
    r_time_of_loss 084500,
    r_date_of_loss 2023-07-20T000000Z,
    r_progress l,
    r_reported_as l,
    r_description Silver iPhone XS,
    category_id 50000000001,
    admin_id 12345678901,
    user_id null,
    admin_date_reported 2023-07-20T000000Z
  },
{ r_id 60000000004, r_name Lost Backpack, r_location Library, r_time_of_loss 112000, r_date_of_loss ISODate(2023-09-05), r_progress l, r_reported_as l, r_description Blue backpack with books, category_id 50000000005,  Books admin_id null, user_id 12345678904, user_date_reported ISODate(2023-09-05) },
 { r_id 60000000005, r_name Stolen Laptop, r_location Office, r_time_of_loss 090000, r_date_of_loss ISODate(2023-08-10), r_progress l, r_reported_as l, r_description Silver MacBook Pro, category_id 50000000002,  Electronics admin_id 12345678901, user_id null, admin_date_reported ISODate(2023-08-10) },
 { r_id 60000000006, r_name Lost Jewelry, r_location Restaurant, r_time_of_loss 201500, r_date_of_loss ISODate(2023-09-20), r_progress l, r_reported_as l, r_description Gold necklace and earrings, category_id 50000000003,  Jewelry admin_id null, user_id 12345678905, user_date_reported ISODate(2023-09-20) },
 { r_id 60000000007, r_name Stolen Bicycle, r_location Street, r_time_of_loss 140000, r_date_of_loss ISODate(2023-08-25), r_progress l, r_reported_as l, r_description Red mountain bike, category_id 50000000004,  Sports Equipment admin_id 12345678901, user_id null, admin_date_reported ISODate(2023-08-25) }, 
{ r_id 60000000008, r_name Lost Wallet, r_location Supermarket, r_time_of_loss 164500, r_date_of_loss ISODate(2023-09-10), r_progress l, r_reported_as l, r_description Brown leather wallet, category_id 50000000001,  Stationary admin_id null, user_id 12345678906, user_date_reported ISODate(2023-09-10) }, { r_id 60000000009, r_name Stolen Watch, r_location Park, r_time_of_loss 103000, r_date_of_loss ISODate(2023-08-05), r_progress l, r_reported_as l, r_description Silver wristwatch, category_id 50000000003,  Jewelry admin_id 12345678901, user_id null, admin_date_reported ISODate(2023-08-05) }, { r_id 60000000010, r_name Lost Umbrella, r_location Cafe, r_time_of_loss 180000, r_date_of_loss ISODate(2023-09-15), r_progress l, r_reported_as l, r_description Black folding umbrella, category_id 50000000001,  Stationary admin_id null, user_id 12345678907, user_date_reported ISODate(2023-09-15) }, { r_id 60000000011, r_name Stolen Wallet, r_location Shopping Mall, r_time_of_loss 141500, r_date_of_loss ISODate(2023-08-15), r_progress l, r_reported_as l, r_description Black leather wallet, category_id 50000000001,  Stationary admin_id 12345678902, user_id null, admin_date_reported ISODate(2023-08-15) }
]

);


REPORTED ITEMS
db.reported_image.insertMany([
  {
    r_id 60000000002,
    r_images [
      image_url_1,
      image_url_2,
      image_url_3
    ]
  },
  {
    r_id 60000000003,
    r_images [
      image_url_4,
      image_url_5
    ]
  },
  {
    r_id 60000000004,
    r_images [
      image_url_6
    ]
  },
  {
    r_id 60000000005,
    r_images [
      image_url_7,
      image_url_8
    ]
  },
  {
    r_id 60000000006,
    r_images [
      image_url_9,
      image_url_10
    ]
  },
  {
    r_id 60000000007,
    r_images [
      image_url_11,
      image_url_12
    ]
  },
  {
    r_id 60000000008,
    r_images [
      image_url_13
    ]
  },
  {
    r_id 60000000009,
    r_images [
      image_url_14
    ]
  },
  {
    r_id 60000000010,
    r_images [
      image_url_15,
      image_url_16
    ]
  },
  {
    r_id 60000000011,
    r_images [
      image_url_17,
      image_url_18,
      image_url_19
    ]
  }
]);


MESSAGES
db.messages.insertMany([
  {
    m_id 80000000002,
    m_content Hello, I lost my backpack. Can you assist,
    m_date 2023-08-31T000000Z,
    m_time 101500,
    to_user_id 12345678901,
    from_user_id 12345678902,
    to_admin_id null,
    from_admin_id null
  },
  {
    m_id 80000000003,
    m_content Of course, I'd be happy to help. Please provide more details about your backpack.,
    m_date 2023-08-31T000000Z,
    m_time 113000,
    to_user_id 12345678902,
    from_user_id 12345678901,
    to_admin_id null,
    from_admin_id null
  },
  {
    m_id 80000000004,
    m_content Hi, I lost my laptop in the office.,
    m_date 2023-08-31T000000Z,
    m_time 142000,
    to_user_id 12345678903,
    from_user_id 12345678905,
    to_admin_id null,
    from_admin_id null
  },
  {
    m_id 80000000005,
    m_content I found your laptop. I'll give it to the admin.,
    m_date 2023-08-31T000000Z,
    m_time 154500,
    to_user_id 12345678905,
    from_user_id 12345678903,
    to_admin_id null,
    from_admin_id null
  },
  {
    m_id 80000000006,
    m_content Hello, I have a question about the lost and found process.,
    m_date 2023-08-31T000000Z,
    m_time 091000,
    to_user_id 12345678904,
    from_user_id 12345678901,
    to_admin_id null,
    from_admin_id null
  },
  {
    m_id 80000000007,
    m_content Absolutely, feel free to ask your question.,
    m_date 2023-08-31T000000Z,
    m_time 103000,
    to_user_id 12345678901,
    from_user_id 12345678904,
    to_admin_id null,
    from_admin_id null
  },
  {
    m_id 80000000008,
    m_content Hi, I lost my bicycle near the gym.,
    m_date 2023-08-31T000000Z,
    m_time 130500,
    to_user_id 12345678906,
    from_user_id 12345678907,
    to_admin_id null,
    from_admin_id null
  },
  {
    m_id 80000000009,
    m_content I'll check if anyone has reported it. I'll let you know.,
    m_date 2023-08-31T000000Z,
    m_time 144500,
    to_user_id 12345678907,
    from_user_id 12345678906,
    to_admin_id null,
    from_admin_id null
  },
  {
    m_id 80000000010,
    m_content Hello, I lost my jewelry in the park.,
    m_date 2023-08-31T000000Z,
    m_time 115000,
    to_user_id 12345678908,
    from_user_id 12345678909,
    to_admin_id null,
    from_admin_id null
  },
  {
    m_id 80000000011,
    m_content I'm sorry to hear that. Please provide a description of the jewelry.,
    m_date 2023-08-31T000000Z,
    m_time 121500,
    to_user_id 12345678909,
    from_user_id 12345678908,
    to_admin_id null,
    from_admin_id null
  }
   Continue with more messages...
]

)

SECURITY QUESTIONS
db.security_qa.insertMany([
  {
    sqa_question What is your favorite color,
    sqa_answer Blue,
    sqa_r_id 60000000002
  },
  {
    sqa_question What was the name of your first pet,
    sqa_answer Buddy,
    sqa_r_id 60000000003
  },
  {
    sqa_question Where were you born,
    sqa_answer New York,
    sqa_r_id 60000000004
  },
  {
    sqa_question What is the name of your best friend,
    sqa_answer Emily,
    sqa_r_id 60000000005
  },
  {
    sqa_question What is your favorite book,
    sqa_answer Harry Potter,
    sqa_r_id 60000000006
  },
  {
    sqa_question What is the name of your favorite teacher,
    sqa_answer Mr. Johnson,
    sqa_r_id 60000000007
  },
  {
    sqa_question What is your mother's birthplace,
    sqa_answer Chicago,
    sqa_r_id 60000000008
  },
  {
    sqa_question What is your favorite food,
    sqa_answer Pizza,
    sqa_r_id 60000000009
  },
  {
    sqa_question What is the name of your first school,
    sqa_answer Maple Elementary,
    sqa_r_id 60000000010
  },
  {
    sqa_question What is your favorite movie,
    sqa_answer The Avengers,
    sqa_r_id 60000000011
  }
]);


ANSWERS COLLECTION
db.answers.insertMany([
  {
    ans_veri_status p,
    ans_question What is your favorite color,
    ans_r_id 60000000002,
    ans_user_id 12345678901
  },
  {
    ans_veri_status v,
    ans_question What was the name of your first pet,
    ans_r_id 60000000003,
    ans_user_id 12345678902
  },
  {
    ans_veri_status p,
    ans_question Where were you born,
    ans_r_id 60000000004,
    ans_user_id 12345678903
  },
  {
    ans_veri_status v,
    ans_question What is the name of your best friend,
    ans_r_id 60000000005,
    ans_user_id 12345678904
  },
  {
    ans_veri_status p,
    ans_question What is your favorite book,
    ans_r_id 60000000006,
    ans_user_id 12345678905
  },
  {
    ans_veri_status v,
    ans_question What is the name of your favorite teacher,
    ans_r_id 60000000007,
    ans_user_id 12345678906
  },
  {
    ans_veri_status p,
    ans_question What is your mother's birthplace,
    ans_r_id 60000000008,
    ans_user_id 12345678907
  },
  {
    ans_veri_status v,
    ans_question What is your favorite food,
    ans_r_id 60000000009,
    ans_user_id 12345678908
  },
  {
    ans_veri_status p,
    ans_question What is the name of your first school,
    ans_r_id 60000000010,
    ans_user_id 12345678909
  }
]

)







QUERIES
AND Operator ($and)
Find reported items that were lost after 2023-08-31 and belong to the Electronics category.
Retrieve messages sent by user 12345678901 to admin 12345678902 and sent by admin 12345678902 to user 12345678901.
Get reported items that were lost in the library and have a progress status of l.
Find items that were reported by user 12345678903 and have not been verified yet.
Retrieve reported items with a location of Street and a category either Sports Equipment or Jewelry.
OR operator
Find reported items that were lost after 2023-08-31 or have been reported as stolen.
Retrieve messages sent by user 12345678901 to admin 12345678902 or admin 12345678902 to user 12345678901.
Get reported items that were lost in the library or reported by user 12345678903.
Find items that have a progress status of l or p.
Retrieve reported items with a location of Street or a category of Sports Equipment.


NOT OPERATOR 
Find reported items that were lost before 2023-08-31 and are not categorized as Books.
Retrieve messages sent by user 12345678901 to admin 12345678902 but not sent by admin 12345678902 to user 12345678901.
Get reported items that were lost in the library but not in progress.
Find items that were reported by user 12345678903 but are not verified.
Retrieve reported items with a location not equal to Street.
NOR OPERATOR
Find reported items that were lost before 2023-08-31 nor categorized as Books.
Retrieve messages not sent by user 12345678901 to admin 12345678902 nor by admin 12345678902 to user 12345678901.
Get reported items that were neither lost in the library nor in progress.
Find items that were not reported by user 12345678903 nor verified.
Retrieve reported items with a location neither Street nor Library.
$set and $unset (UPDATE)
Update the progress of a reported item with r_id 60000000001 to completed.
Set the user_date_reported field to the current date for the reported item with r_id 60000000002.
Update the user_email of the user with control_faculty_id 12345678901 to newemail@example.com.
Update the m_content of a message with m_id 80000000001 to Updated message content.
Set the admin_id to null for the reported item with r_id 60000000003.




Remove the user_phone field from the user with control_faculty_id 12345678902.
Unset the from_admin_id field from a message with m_id 80000000002.
Remove the user_account_status field from the user with control_faculty_id 12345678903.
Unset the admin_id field from a reported item with r_id 60000000004.
Remove the r_location field from the reported item with r_id 60000000005.
$lt,$lte,$gt,$gte,$ne,$nin,$eq,$exists(UPDATE)
Find reported items with a date of loss greater than or equal to 2023-09-01.
Find users with an age less than 30.
Find messages that were not sent by admin.
Find reported items with a progress status other than completed.
Find reported items with category IDs not in the specified list.
Find users with an account status of active or pending.
Find messages with no to_user_id field.
Find reported items with a progress status of in_progress and a category ID of 50000000003.
Find users with an age greater than or equal to 18 and less than 60.
Find reported items with a date of loss between 2023-08-15 and 2023-09-15.
Count the total number of reported items with a progress status of in_progress.
count(), limit(),sort(),skip(),findOne()
Find and count the number of reported items with a location in alphabetical order (ascending).
Find and count the number of reported items with a progress status of completed and limit the result to 5 items.
Find and count the number of reported items with a category ID of 50000000002, sorted by date of loss (descending), and skip the first 2 items.
Find and count the number of reported items with a progress status of pending and a category ID of 50000000001, sorted by date of loss (ascending), and limit the result to 3 items.
Find and count the number of reported items with a reported ID greater than 60000000005, sorted by date of loss (ascending), and limit the result to 4 items.
Find the first reported item with a progress status of in_progress and sort the result by date of loss (descending).
Find the reported item with the lowest reported ID and display its name and description.
Find the reported item with a location of Library and display its name, location, and date of loss.
Find the reported item with a category ID of 50000000003 and display its name, location, and date of loss.

